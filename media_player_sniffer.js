<!--
// External javascript file for Compel Interactive

/*
Streaming Media Player Plug-in Sniffer version 0.95 by Joe Follansbee, Compel Interactive, http://www.compelinteractive.com,
based on other publicly available sniffers by the player manufacturers. NO WARRANTY IS SUGGESTED OR IMPLIED. USE AT YOUR OWN RISK.
This simple sniffer identifies the presence of browser plug-ins for RealPlayer, Windows Media Player, and QuickTime Player. We assume if the plug-in exists, so does the external player.
Based on the sniffer results, developers may write other functions that give the user information for installing needed plug-ins.
These browser-based messages or actions can replace confusing error messages generated by the player or the browser.
The code below assumes a designer prefers RealPlayer, though the code can be quickly adapted for one or more player preferences.
Note that Active X controls cannot be sniffed in MSIE on Macs, as far as I know. How to cope? Punt, that is, try to play
the file anyway no matter what the sniffer may say. Comments and suggestions are welcome at joef@compelinteractive.com.
*/

var pluginStatus = 0; // "0" means no plugins, "1" means RealPlayer plugin only, "2" means WMP plug-in only, "3" means QuickTime plug-in only

var xReal = false;
var pReal = false;
var xWMP = false;
var pWMP = false;
var xQuickTime = false;
var pQuickTime = false;

OSName = "unknown";
bName = "unknown";
bVer = "unknown";

if (navigator.appVersion.indexOf("Mac") > 0) OSName = "Mac";
if (navigator.appVersion.indexOf("Win") > 0) OSName = "Win";

if (navigator.appName.substring(0,8) == "Netscape") bName = "NN";
if (navigator.appName.substring(0,9) == "Microsoft") bName = "IE";

if (parseInt(navigator.appVersion) >= 3) bVer="3x";
if (parseInt(navigator.appVersion) >= 4) bVer="4x";
if (parseInt(navigator.appVersion) >= 5) bVer="5x";

var need_player = "We're sorry. It appears you do not have RealPlayer or it is not working properly.\nFor your convenience, we've included a free RealPlayer in the \\demo\\RealPlayer\\ directory on the Compel Interactive CD.\nPlease install RealPlayer before continuing.";
var need_Real = "We're sorry. It appears you do not have RealPlayer or it is not working properly.\nFor your convenience, we've included a free RealPlayer in the \\demo\\RealPlayer\\ directory on the Compel Interactive CD.\nPlease install RealPlayer before continuing.";
var need_Win = "We're sorry. This presentation is currently only available for Windows users. Please view this link on a PC.";

// Check for RealPlayer, WMP, and QuickTime Active X controls in MSIE for Windows by launching the Active X control
document.write('<SCRIPT LANGUAGE=VBScript\> \n');
document.write('on error resume next \n');
document.write('xReal = (NOT IsNull(CreateObject("rmocx.RealPlayer G2 Control.1")))\n');
document.write('xWMP = (NOT IsNull(CreateObject("MediaPlayer.MediaPlayer.1")))\n');
document.write('xQuickTime = (NOT IsNull(CreateObject("QuickTimeCheckObject.QuickTimeCheck.1")))\n');
document.write('</SCRIPT\> \n');
// End MSIE Active X check

// Check for RealPlayer G2, RealOne, WMP, and QuickTime plugins in Netscape
if (navigator.userAgent.indexOf("MSIE") < 0 ) {
	numPlugins = navigator.plugins.length;	// Create a shorthand object for iterating through plugins
// Look for RealPlayer G2
	for (i = 0; i < numPlugins; i++) {
        	plugin = navigator.plugins[i];	// Create a shorthand plugin object
			// RealPlayer 5.0 and older should be upgraded, so if they're installed, we assume no player (pluginStatus == 0)
			// RealPlayer G2 is now the standard Real player, RealPlayer 9 brought a new plugin name
			if ((plugin.name.indexOf('G2') != -1) || (plugin.name.indexOf('RealOne') != -1)) {
        		pReal = true;
        			}
        		if (plugin.name.indexOf('Windows Media Player') != -1) {
        		pWMP = true;
        			}
	      		if (plugin.name.indexOf('QuickTime') != -1) {
	       		pQuickTime = true;
        			}
		}
	} // End Netscape plugin check

// Set plug-in status; default is 0, meaning no plugins or Active X controls
// Once the if statement is true, the statements end, allowing designers to set a player preference
// Reorder according to taste
if ((xReal == true) || (pReal == true)) {
	pluginStatus = 1;
        }
else if ((xWMP == true) || (pWMP == true)) {
	pluginStatus = 2;
	}
else if ((xQuicktime == true) || (pQuickTime == true)) {
	pluginStatus = 3;
	}

function getReal(wmpDir, wmpName, wmpFeatures, wmpName) {
	myRemote = window.open(wmpDir, wmpName, wmpFeatures, wmpName);
	myRemote.focus();
}

// This function checks the OS and the plugin status, and starts the external player based on the result.
function launchPlayer(URL) {
	if (OSName == "Mac") {	// If the OS is not Windows, try to play the file, and hope for the best.
		alert(need_Win);
		}
	else if (OSName == "Win") {	// If the OS is Windows, check the plugin/Active X status and act accordingly.
		if (pluginStatus == 0) {
			alert(need_player);
			}
		else if (pluginStatus == 1) {
			document.location = URL;
			}
		else if (pluginStatus == 2) {
			getReal("wmp/get_real/index.html","myRemote","height=120,width=128,screenX=0,left=0,screenY=0,top=0,alwaysLowered=0,alwaysRaised=0,channelmode=0,dependent=0,directories=0,fullscreen=0,hotkeys=1,location=0,menubar=0,resizable=0,scrollbars=0,status=0,titlebar=1,toolbar=0,z-lock=0","slideshow");			
//			alert(need_Real);
			}
		else if (pluginStatus == 3) {
			alert(need_Real);
			}
		}
	}

// This function loads the play window for the SMIL plugin presentations.
function playWin(URL,Dim) {
	if (OSName == "Mac") {	// If the OS is not Windows, try to play the file, and hope for the best.
		alert(need_Win);
		}
	else if (OSName == "Win") {	// If the OS is Windows, check the plugin status and act accordingly.
		if (pluginStatus == 0) {
			alert(need_player);
			}
		else if (pluginStatus == 1) {
			playWindow = window.open(URL,'playWin',Dim);
			playWindow.focus();
			}
		else if (pluginStatus == 2) {
			getReal("wmp/get_real/index.html","myRemote","height=120,width=128,screenX=0,left=0,screenY=0,top=0,alwaysLowered=0,alwaysRaised=0,channelmode=0,dependent=0,directories=0,fullscreen=0,hotkeys=1,location=0,menubar=0,resizable=0,scrollbars=0,status=0,titlebar=1,toolbar=0,z-lock=0","slideshow");			
//			alert(need_Real);
			}
		else if (pluginStatus == 3) {
			alert(need_Real);
			}
		}

	}

// This function opens a new window to display embedded Player case studies
function caseWindow(URL) {
        caseWin = window.open(URL, 'caseWin', 'width=800,height=610,scrollbars=yes');
        caseWin.focus();
}

function openLink(URL) {
	newWin = window.open(URL, 'newWin');
	newWin.focus();
}

// The following functions manage the javascript rollovers
function MM_swapImgRestore() { //v3.0
  var i,x,a=document.MM_sr; for(i=0;a&&i<a.length&&(x=a[i])&&x.oSrc;i++) x.src=x.oSrc;
}

function MM_preloadImages() { //v3.0
  var d=document; if(d.images){ if(!d.MM_p) d.MM_p=new Array();
    var i,j=d.MM_p.length,a=MM_preloadImages.arguments; for(i=0; i<a.length; i++)
    if (a[i].indexOf("#")!=0){ d.MM_p[j]=new Image; d.MM_p[j++].src=a[i];}}
}

function MM_findObj(n, d) { //v4.0
  var p,i,x;  if(!d) d=document; if((p=n.indexOf("?"))>0&&parent.frames.length) {
    d=parent.frames[n.substring(p+1)].document; n=n.substring(0,p);}
  if(!(x=d[n])&&d.all) x=d.all[n]; for (i=0;!x&&i<d.forms.length;i++) x=d.forms[i][n];
  for(i=0;!x&&d.layers&&i<d.layers.length;i++) x=MM_findObj(n,d.layers[i].document);
  if(!x && document.getElementById) x=document.getElementById(n); return x;
}

function MM_swapImage() { //v3.0
  var i,j=0,x,a=MM_swapImage.arguments; document.MM_sr=new Array; for(i=0;i<(a.length-2);i+=3)
   if ((x=MM_findObj(a[i]))!=null){document.MM_sr[j++]=x; if(!x.oSrc) x.oSrc=x.src; x.src=a[i+2];}
}
//-->

